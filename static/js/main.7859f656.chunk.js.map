{"version":3,"sources":["components/LineChart.tsx","components/Navbar.tsx","components/Header.tsx","components/Footer.tsx","components/CategorizeForm.tsx","components/ChoiceForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["xdata","xlabels","LineChart","city","useState","dataLabels","setDataLabels","dataValues","setDataValues","data","labels","datasets","label","slice","fill","backgroundColor","pointBorderWidth","borderWidth","borderColor","row","d","y_pred","y_pred_std","aqi","errors","useEffect","csv","then","forEach","push","getHistoricData","getPredictionData","options","elements","point","radius","scales","yAxes","ticks","beginAtZero","type","Navbar","className","href","xmlns","viewBox","Header","Footer","CategorizeForm","setAqi","fetchCity","url","fetch","response","status","json","results","value","console","log","catch","err","ChoiceForm","children","S","require","App","setCity","style","backgroundImage","onChange","option","target","latinise","s","toLowerCase","stripAccents","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7859f656.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from '@reactchartjs/react-chart.js';\nimport { ChartOptions, ChartData } from 'chart.js'\nimport { csv } from 'd3';\n\nvar xdata: Array<[number]> = [];\nvar xlabels: Array<[string]> = [];\n\nconst LineChart: React.FC<{ city: string }> = ({ city }) => {\n\n    const [dataLabels, setDataLabels] = useState<Array<[string]>>([]);\n    const [dataValues, setDataValues] = useState<Array<[number]>>([]);\n\n    const options: ChartOptions = {\n        elements: {\n            point: {\n                radius: 0\n            }\n        },\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    }\n\n\n    const data: ChartData = {\n        labels: dataLabels,\n        datasets: [\n            {\n                label: 'History',\n                data: dataValues.slice(0, 50),\n                fill: false,\n                backgroundColor: 'rgb(0, 255, 0)',\n                pointBorderWidth: 0.1,\n                borderWidth: 5,\n                borderColor: 'rgba(0, 255, 0, 0.2)',\n            },\n            {\n                label: 'Predictions',\n                data: dataValues,\n                fill: false,\n                pointBorderWidth: 0.1,\n                backgroundColor: 'rgb(152, 255, 152)',\n                borderColor: 'rgba(152, 255, 152, 0.2)',\n            },\n        ],\n    }\n\n    const row = (d: any) => {\n        d.y_pred = +d.y_pred;\n        d.y_pred_std = +d.y_pred_std;\n        d.aqi = +d.aqi;\n        d.errors = +d.errors;\n        return d;\n    };\n\n    const getPredictionData = (city: string) => csv(`https://raw.githubusercontent.com/PrzemyslawSarnacki/AirQualityPrediction/master/data/predictions/history-${city}.csv`, row).then(\n        (data) => {\n            data.forEach((row) => xlabels.push(row[\"\"]));\n            data.forEach((row) => xdata.push(row[\"y_pred\"]));\n            setDataLabels(xlabels);\n            setDataValues(xdata);\n        }\n    );\n\n    const getHistoricData = (city: string) => csv(`https://raw.githubusercontent.com/PrzemyslawSarnacki/AirQualityPrediction/master/data/predictions/prediction-${city}.csv`, row).then(\n        (data) => {\n            data.forEach((row) => xlabels.push(row[\"\"]));\n            data.forEach((row) => xdata.push(row[\"aqi\"]));\n        }\n    );\n\n    useEffect(() => {\n        xlabels = [];\n        xdata = [];\n        getHistoricData(city);\n        getPredictionData(city);\n    }, [city]);\n\n\n\n    return (\n        <div>\n            <Line data={data} options={options} type={'line'} />\n        </div>\n\n    );\n\n\n}\n\nexport default LineChart;\n","import React from 'react'\n\nconst Navbar: React.FC = () => {\n    return (\n        <div className=\"w-full container mx-auto\">\n            <div className=\"w-full flex items-center justify-between\">\n                <a className=\"flex items-center text-indigo-400 no-underline hover:no-underline font-bold text-2xl lg:text-4xl\" href=\"#\">\n                    Air<span className=\"bg-clip-text text-transparent bg-gradient-to-r from-green-400 via-pink-500 to-purple-500\">Predictor</span>\n                </a>\n\n                <div className=\"flex w-1/2 justify-end content-center\">\n                    <a className=\"inline-block text-blue-300 no-underline hover:text-pink-500 hover:text-underline text-center h-10 p-2 md:h-auto md:p-4 transform hover:scale-125 duration-300 ease-in-out\" href=\"https://twitter.com/intent/tweet?url=#\">\n                        <svg className=\"fill-current h-6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                            <path\n                                d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\"\n                            ></path>\n                        </svg>\n                    </a>\n                    <a\n                        className=\"inline-block text-blue-300 no-underline hover:text-pink-500 hover:text-underline text-center h-10 p-2 md:h-auto md:p-4 transform hover:scale-125 duration-300 ease-in-out\"\n                        href=\"https://www.facebook.com/sharer/sharer.php?u=#\"\n                    >\n                        <svg className=\"fill-current h-6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n                            <path d=\"M19 6h5V0h-5c-3.86 0-7 3.14-7 7v3H8v6h4v16h6V16h5l1-6h-6V7c0-.542.458-1 1-1z\"></path>\n                        </svg>\n                    </a>\n                    <a\n                        className=\"inline-block text-blue-300 no-underline hover:text-pink-500 hover:text-underline text-center h-10 p-2 md:h-auto md:p-4 transform hover:scale-125 duration-300 ease-in-out\"\n                        href=\"https://www.github.com/PrzemyslawSarnacki/air-predictor\"\n                    >\n                        <svg className=\"fill-current h-6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n                            <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n                        </svg>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Navbar;","import React from 'react'\n\nconst Header: React.FC = () => {\n    return (\n        <div className=\"flex flex-col w-full xl:w-2/5 justify-center lg:items-start overflow-y-hidden\">\n            <h1 className=\"my-4 text-3xl md:text-5xl text-white opacity-75 font-bold leading-tight text-center md:text-left\">\n                Check \n            <span className=\"bg-clip-text text-transparent bg-gradient-to-r from-green-400 via-pink-500 to-purple-500\">\n                    Your City \n            </span>\n             to protect yourself\n          </h1>\n            <p className=\"leading-normal text-base md:text-2xl mb-8 text-center md:text-left\">\n                Check predicted air quality index for your city so you can keep your health on point.\n          </p>\n        </div>\n    );\n}\n\nexport default Header;","import React from 'react'\n\nconst Footer: React.FC = () => {\n    return (\n        <div className=\"w-full pt-16 pb-6 text-sm text-center md:text-left fade-in\">\n        <a className=\"text-gray-500 no-underline hover:no-underline\" href=\"#\">&copy; App 2020</a>\n          - Template by\n          <a className=\"text-gray-500 no-underline hover:no-underline\" href=\"https://www.tailwindtoolbox.com\">TailwindToolbox.com</a>\n      </div>\n    );\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react'\n\n\n\nconst CategorizeForm: React.FC<{city: string}> = ({city}) => {\n\n  const [aqi, setAqi] = useState<number>(0);\n\n  useEffect(() => {\n    fetchCity(city);\n  }, [city]);\n\n\n  const fetchCity = (city: string) => {\n    const url = `https://api.openaq.org/v1/measurements?city=${city}&parameter=pm25`;\n    fetch(url)\n      .then(\n        function (response) {\n          if (response.status !== 200) {\n            console.log('Looks like there was a problem. Status Code: ' +\n              response.status);\n            return;\n          }\n          response.json().then(function (data) {\n            setAqi(data.results[0].value);\n          });\n        }\n      )\n      .catch(function (err) {\n        console.log('Fetch Error :-S', err);\n      });\n  }\n\n  const categorize = () => {\n    if (aqi < 50) {\n      return <>🥳</>\n    }\n    else if (aqi > 50 && aqi < 100) {\n      return <>😒</>\n    }\n    else if (aqi > 100 && aqi < 200) {\n      return <>😥</>\n    }\n    else if (aqi > 200) {\n      return <>😰</>\n    }\n  }\n\n  return (\n    <form className=\"bg-gray-900 opacity-75 w-full shadow-lg rounded-lg px-8 pt-6 pb-8 mb-4 focus:ring transform transition hover:scale-105 duration-300 ease-in-out\">\n      <label className=\"block text-blue-300 py-2 font-bold mb-2 text-center\">\n        Data from within 1 hour:\n              </label>\n      <p className=\"leading-normal text-blue-300 md:text-2xl mb-8 text-center \">\n        {aqi}\n      </p>\n      \n      <p className=\"my-4 text-3xl md:text-5xl text-white opacity-75 font-bold leading-tight text-center\">\n      {categorize()}\n      </p>\n    </form>\n  );\n}\n\nexport default CategorizeForm;","import React, { ReactEventHandler, ReactHTML, SyntheticEvent, useEffect, useState } from 'react'\n\n\n\nconst ChoiceForm: React.FC<{ children: React.ReactNode}> = ({ children }) => {\n\n  return (\n    <form className=\"bg-gray-900 opacity-75 w-full shadow-lg rounded-lg px-8 pt-6 pb-8 mb-4\">\n      <div className=\"mb-4\">\n        <label className=\"block text-blue-300 py-2 font-bold mb-2\">\n          Choose a city:\n      </label>\n      </div>\n      <>{children}</>\n      <div className=\"flex items-center justify-center pt-4 mt-4\">\n        <button\n          className=\"bg-gradient-to-r from-purple-800 to-green-500 hover:from-pink-500 hover:to-green-500 text-white font-bold py-2 px-4 rounded focus:ring transform transition hover:scale-105 duration-300 ease-in-out\"\n          type=\"button\"\n        >\n          Refresh\n      </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ChoiceForm;","import React, { useState, useEffect, ReactNode } from 'react';\nimport './css/tailwind.css';\nimport LineChart from './components/LineChart';\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport CategorizeForm from './components/CategorizeForm';\nimport ChoiceForm from './components/ChoiceForm';\n\nvar S = require('string');\n\n\nconst App: React.FC = () => {\n  \n  const [city, setCity] = useState<string>(\"Katowice\");\n  \n  const stripAccents = (city: string) => {\n    return S(city).latinise().s.toLowerCase()\n  }\n\n  return (\n    <body className=\"leading-normal tracking-normal text-indigo-400 bg-cover bg-fixed\" style={{ backgroundImage: `url(header.png)` }}>\n      <div className=\"h-full\">\n        <Navbar />\n        <div className=\"container pt-24 md:pt-36 mx-auto flex flex-wrap flex-col md:flex-row items-center\">\n          <Header />\n          <ChoiceForm>\n            <select\n              className=\"mb-5 shadow appearance-none border rounded w-full p-3 text-gray-700 leading-tight focus:ring transform transition hover:scale-105 duration-300 ease-in-out\"\n              onChange={(option) => setCity(option.target.value)}>\n              <option>Katowice</option>\n              <option>Białystok</option>\n              <option>Warszawa</option>\n              <option>Poznań</option>\n              <option>Kraków</option>\n            </select>\n            <LineChart city={stripAccents(city)} />\n          </ChoiceForm>\n          <CategorizeForm city={city} />\n        </div>\n        <Footer />\n        </div>\n    </body>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}